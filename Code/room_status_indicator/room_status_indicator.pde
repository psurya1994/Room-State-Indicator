int A[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,0,0,0},
  {0,0,1,0,0,1,0,0},
  {0,1,0,0,0,0,1,0},
  {0,1,1,1,1,1,1,0},
  {0,1,0,0,0,0,1,0},
  {0,1,0,0,0,0,1,0},
  {0,0,0,0,0,0,0,0}
};

int happy[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,1,0,0,0,0,1,0},
  {1,0,1,0,0,1,0,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,0,0,0,0,0,0,1},
  {0,1,0,0,0,0,1,0},
  {0,0,1,1,1,1,0,0}
};

int clock_arrow[8][8] = {
  {0,0,0,1,0,0,0,0},
  {0,0,1,1,1,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,1,0},
  {0,0,0,1,1,1,1,1},
  {0,0,0,0,0,0,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock1[8][8] = {
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock2[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock3[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock4[8][8] = {
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {1,1,1,1,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_1[8][8] = {
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_2[8][8] = {
  {0,0,0,0,0,0,1,0},
  {0,0,0,0,0,1,0,0},
  {0,0,0,0,1,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_3[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_4[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,0,1,0,0,0},
  {0,0,0,0,0,1,0,0},
  {0,0,0,0,0,0,1,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_5[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_6[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,1,0,0,0,0,0},
  {0,1,0,0,0,0,0,0},
  {1,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_7[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int clock8_8[8][8] = {
  {1,0,0,0,0,0,0,0},
  {0,1,0,0,0,0,0,0},
  {0,0,1,0,0,0,0,0},
  {0,0,0,1,1,1,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int sleep2_1[8][8] = {
  {0,0,0,0,0,1,1,1},
  {0,0,0,0,0,0,1,0},
  {0,0,0,0,0,1,1,1},
  {0,0,0,0,0,0,0,0},
  {1,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,0,0,1,0,0,0,0},
  {0,1,1,0,0,0,0,0}
};

int sleep2_2[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,1,1,1,0},
  {0,0,0,0,0,1,0,0},
  {0,0,0,0,1,1,1,0},
  {1,0,0,1,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,0,0,1,0,0,0,0},
  {0,1,1,0,0,0,0,0}
};

int sleep1_1[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,1,0,1,0,1,0,1},
  {0,0,1,0,0,0,1,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,1,1,1,0,0},
  {0,0,0,1,0,1,0,0},
  {0,0,0,1,1,1,0,0},
  {0,0,0,0,0,0,0,0}
};

int zero[8][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0}
};

int ArrayClipper = 0;
int clip = 0;

int rowPins[8] = {6,3,8,2,15,9,17,10};
int columnPins[8] = {19,18,14,7,13,5,4,16};

int state = 1;

void setup()
{
  Serial.begin(9600);
  for(int i =0;i < 8;i++)
  {
    pinMode(rowPins[i],OUTPUT);
    pinMode(columnPins[i],OUTPUT);
    digitalWrite(columnPins[i],HIGH);
  }
  pinMode(11,INPUT);
}

void loop()
{
  // read from switch
  if(digitalRead(11)==1)
  {
    state++;
    if(state>3)
      state = 1;
    delay(150);
  }
  switch(state)
  {
    case 1: show(happy,30); break;
    case 2: show(clock_arrow,30); break;
    case 3: show(sleep1_1,30); break;
  }
  
}

void show(int image[8][8], unsigned long duration)
{
  //clip = (ArrayClipper%32);
  unsigned long start = millis();
  while(start+duration>millis())
  {
    for(int row = 0; row < 8; row++)
    {
      digitalWrite(rowPins[row], HIGH);
      for(int column=(0+clip); column < 8+clip; column ++)
      {
        boolean pixel = image[row][column%32];
        if(pixel==1)
        {
          digitalWrite(columnPins[column-clip], LOW);
        }
        delayMicroseconds(300);
        digitalWrite(columnPins[column-clip],HIGH);
      }
    digitalWrite(rowPins[row], LOW);
    }
  }
  //ArrayClipper+=1;
}
